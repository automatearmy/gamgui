steps:
  # Install
  - name: "node:20-alpine"
    id: install-dependencies
    dir: frontend
    entrypoint: npm
    args: [ci]

  # Lint
  - name: "node:20-alpine"
    id: execute-lint
    dir: frontend
    entrypoint: npm
    args: [run, lint]

  # Test
  - name: "node:20-alpine"
    id: execute-tests
    dir: frontend
    entrypoint: npm
    args: [run, test]

  # Build the container image with unique digest
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - --build-arg
      - "BUILD_ID=${COMMIT_SHA}"
      - -t
      - "${_REGISTRY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:$COMMIT_SHA"
      - -t
      - "${_REGISTRY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:latest"
      - .
    dir: frontend
    id: docker-build

  # Push images with different tags
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "${_REGISTRY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:$COMMIT_SHA"
    id: docker-push-sha

  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - "${_REGISTRY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:latest"
    id: docker-push-latest

timeout: 1800s
images:
  - "${_REGISTRY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:$COMMIT_SHA"
  - "${_REGISTRY_LOCATION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY_NAME}/${_IMAGE_NAME}:latest"
options:
  logStreamingOption: STREAM_ON
  logging: CLOUD_LOGGING_ONLY
serviceAccount: "projects/${PROJECT_ID}/serviceAccounts/gamgui-registry-cloud-builder@${PROJECT_ID}.iam.gserviceaccount.com"
